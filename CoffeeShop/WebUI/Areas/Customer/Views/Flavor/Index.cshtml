@model Core.Views.CoffeeFlavorListView

<div id="customer-content">
    <div id="coffee-list">        
        @Ajax.ActionLink("Starbucks® Blonde Roast Coffee", "Index", "Flavor", new { coffeeCode = "StarbucksBlonde", page = 1 }, 
            new AjaxOptions() { UpdateTargetId = "customer-content", OnComplete="CalculateQuantity()"},
            new { @class = (Model.CurrentCoffee == "StarbucksBlonde" ? "selected" : null)  })    
        @Ajax.ActionLink("Medium Roast Coffee", "Index", "Flavor", new { coffeeCode = "MediumRoast", page = 1 }, 
            new AjaxOptions() { UpdateTargetId = "customer-content", OnComplete="CalculateQuantity()"},
            new { @class = (Model.CurrentCoffee == "MediumRoast" ? "selected" : null)  })    
        @Ajax.ActionLink("Dark Roast Coffee", "Index", "Flavor", new { coffeeCode = "DarkRoast", page = 1 }, 
            new AjaxOptions() { UpdateTargetId = "customer-content", OnComplete="CalculateQuantity()"},
            new { @class = (Model.CurrentCoffee == "DarkRoast" ? "selected" : null)  })    
        @Ajax.ActionLink("Verismo™ Pods", "Index", "Flavor", new { coffeeCode = "VerismoPods", page = 1 }, 
            new AjaxOptions() { UpdateTargetId = "customer-content", OnComplete="CalculateQuantity()"},
            new { @class = (Model.CurrentCoffee == "VerismoPods" ? "selected" : null)  })   
        @Ajax.ActionLink("Starbucks Reserve® Coffee", "Index", "Flavor", new { coffeeCode = "StarbucksReserve", page = 1 }, 
            new AjaxOptions() { UpdateTargetId = "customer-content", OnComplete="CalculateQuantity()"},
            new { @class = (Model.CurrentCoffee == "StarbucksReserve" ? "selected" : null)  })        
        @Ajax.ActionLink("Starbucks VIA®", "Index", "Flavor", new { coffeeCode = "StarbucksVIA", page = 1 }, 
            new AjaxOptions() { UpdateTargetId = "customer-content", OnComplete="CalculateQuantity()"},
            new { @class = (Model.CurrentCoffee == "StarbucksVIA" ? "selected" : null)  })        
        @Ajax.ActionLink("Starbucks® K-Cup® Packs", "Index", "Flavor", new { coffeeCode = "StarbucksKCup", page = 1 }, 
            new AjaxOptions() { UpdateTargetId = "customer-content", OnComplete="CalculateQuantity()"},
            new { @class = (Model.CurrentCoffee == "StarbucksKCup" ? "selected" : null)  })    
        @Ajax.ActionLink("Portions & Filter Packs", "Index", "Flavor", new { coffeeCode = "PortionsFilter", page = 1 }, 
            new AjaxOptions() { UpdateTargetId = "customer-content", OnComplete="CalculateQuantity()"},
            new { @class = (Model.CurrentCoffee == "PortionsFilter" ? "selected" : null)  })   
    </div>
    <div id="content-body">        
        <table style="margin: 0px">
            @{
                int k = 0;
                var flavors = Model.Flavors.ToArray();
                for (int  i = 0;  i < Math.Ceiling((double)Model.Flavors.Count()/2);  i++)
                {                    
                    <tr>
                        @for (int j = 0; j < 2; j++)
                        {
                            <td>                                
                                @if (k < flavors.Length)
                                {      
                                    <div class="flavor-item">                               
                                    <table style="margin: 0px; border: 1px dotted gray; max-width: 350px;">
                                        <tr> <td colspan="2"> <h5>@flavors[k].Name</h5> </td> </tr>
                                        <tr>
                                            <td>
                                                <img src='@Url.Action("ShowImage", "Flavor", new { flavorId = flavors[k].Id })' />  
                                            </td>
                                            <td style="font-size: 0.8em"> <em> @flavors[k].Description </em> </td>
                                        </tr>
                                        <tr>
                                            <td style="font-size: 0.8em">
                                                <strong> Roast: </strong> @flavors[k].Roast <br/>
                                                <strong> Region: </strong> @flavors[k].Region
                                            </td>
                                            <td>
                                                @using (Ajax.BeginForm("Add", "CurrentOrder", new { flavorId = flavors[k].Id },
                                                    new AjaxOptions() { HttpMethod = "POST", OnComplete = "AddCurrentOrder(" + flavors[k].Id + ")", UpdateTargetId = "Quantity" }, 
                                                    new { id = "form" + flavors[k].Id }))
                                                { 
                                                    @Html.TextAreaFor(p => p.Quantity, new { style = "overflow: hidden; width: 30px; height: 16px;" })
                                                    <button>Add to bag</button> <br/>
                                                    @Html.ValidationMessageFor(p => p.Quantity)
                                                }                                                
                                            </td>
                                        </tr>
                                    </table> 
                                    </div>                                                                      
                                    k++;
                                }                                                                                                                         
                            </td>
                        }                     
                    </tr>       
                }
            }
        </table>     
        <div class="flavor-pager">
            @Ajax.FlavorPageLinks(Model)
        </div>
    </div>
</div>

<script>
    function AddCurrentOrder(flavorId)
    {        
        var formId = "form" + flavorId;
        $('#' + formId).children("textarea").text("0");
        CalculateQuantity();
    }
</script>

